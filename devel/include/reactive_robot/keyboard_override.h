// Generated by gencpp from file reactive_robot/keyboard_override.msg
// DO NOT EDIT!


#ifndef REACTIVE_ROBOT_MESSAGE_KEYBOARD_OVERRIDE_H
#define REACTIVE_ROBOT_MESSAGE_KEYBOARD_OVERRIDE_H

#include <ros/service_traits.h>


#include <reactive_robot/keyboard_overrideRequest.h>
#include <reactive_robot/keyboard_overrideResponse.h>


namespace reactive_robot
{

struct keyboard_override
{

typedef keyboard_overrideRequest Request;
typedef keyboard_overrideResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct keyboard_override
} // namespace reactive_robot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::reactive_robot::keyboard_override > {
  static const char* value()
  {
    return "cb5aa041e0dc2943641ab2f5d3442948";
  }

  static const char* value(const ::reactive_robot::keyboard_override&) { return value(); }
};

template<>
struct DataType< ::reactive_robot::keyboard_override > {
  static const char* value()
  {
    return "reactive_robot/keyboard_override";
  }

  static const char* value(const ::reactive_robot::keyboard_override&) { return value(); }
};


// service_traits::MD5Sum< ::reactive_robot::keyboard_overrideRequest> should match 
// service_traits::MD5Sum< ::reactive_robot::keyboard_override > 
template<>
struct MD5Sum< ::reactive_robot::keyboard_overrideRequest>
{
  static const char* value()
  {
    return MD5Sum< ::reactive_robot::keyboard_override >::value();
  }
  static const char* value(const ::reactive_robot::keyboard_overrideRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::reactive_robot::keyboard_overrideRequest> should match 
// service_traits::DataType< ::reactive_robot::keyboard_override > 
template<>
struct DataType< ::reactive_robot::keyboard_overrideRequest>
{
  static const char* value()
  {
    return DataType< ::reactive_robot::keyboard_override >::value();
  }
  static const char* value(const ::reactive_robot::keyboard_overrideRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::reactive_robot::keyboard_overrideResponse> should match 
// service_traits::MD5Sum< ::reactive_robot::keyboard_override > 
template<>
struct MD5Sum< ::reactive_robot::keyboard_overrideResponse>
{
  static const char* value()
  {
    return MD5Sum< ::reactive_robot::keyboard_override >::value();
  }
  static const char* value(const ::reactive_robot::keyboard_overrideResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::reactive_robot::keyboard_overrideResponse> should match 
// service_traits::DataType< ::reactive_robot::keyboard_override > 
template<>
struct DataType< ::reactive_robot::keyboard_overrideResponse>
{
  static const char* value()
  {
    return DataType< ::reactive_robot::keyboard_override >::value();
  }
  static const char* value(const ::reactive_robot::keyboard_overrideResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // REACTIVE_ROBOT_MESSAGE_KEYBOARD_OVERRIDE_H
